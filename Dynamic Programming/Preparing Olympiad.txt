
/* 
    Triaro's Here !!
*/

#pragma GCC optimize ("O3")
#pragma GCC target ("sse4")
 
#include <bits/stdc++.h>
 
using namespace std;
 
typedef long long ll;
typedef long double ld;
typedef complex<ld> cd;
 
typedef pair<int, int> pi;
typedef pair<ll,ll> pl;
typedef pair<ld,ld> pd;
 
typedef vector<int> vi;
typedef vector<ld> vd;
typedef vector<ll> vl;
typedef vector<pi> vpi;
typedef vector<pl> vpl;
typedef vector<cd> vcd;
 
#define FOR(i, a, b) for (int i=a; i<(b); i++)
#define F0R(i, a) for (int i=0; i<(a); i++)
#define FORd(i,a,b) for (int i = (b)-1; i >= a; i--)
#define F0Rd(i,a) for (int i = (a)-1; i >= 0; i--)
 
#define sz(x) (int)(x).size()
#define mp make_pair
#define pb push_back
#define f first
#define s second
#define lb lower_bound
#define ub upper_bound
#define all(x) x.begin(), x.end()
#define ins insert
#define FAST_IO ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
 #define gtc ll tc;cin>>tc;
mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
 
const int MOD = 1000000007;
const char nl = '\n';
const int MX = 100001; //check the limits, dummy
 
ll ctr=0;
ll check(ll a[], ll n, ll l, ll r, ll x, ll i){
    cout<<"called for n= "<<n<<endl;
    
    if(n<=0)
    return 0;
    else
    {
        if(a[n-2]+a[n-1]>=l && a[n-2]+a[n-1]<=r )
        {
            
            a[n-2]=a[n-2]+a[n-1];
            if(abs(a[n-2]-a[i])>=x)
            return check(a,n-1,l,r,x,i)+check(a,n-2,l,r,x,i)+1;
            else
            return check(a,n-1,l,r,x,i)+check(a,n-2,l,r,x,i);
        }
        else 
        return check(a,n-1,l,r,x,i);
    }
    
    
} 

int main() {
	FAST_IO
	ll n,l,r,x;
    cin>>n>>l>>r>>x;
    ll arr[n];
    for(int i=0;i<n;i++)
    {
        cin>>arr[i];
    }
    for(ll i=n;i>0;i--)
    {
        ctr+=check(arr,n,l,r,x,i);
    }
	cout<<ctr;
	return 0;
}

